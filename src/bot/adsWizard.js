// src/bot/adsWizard.js
import { Scenes, Markup } from 'telegraf';
import { query } from '../db/index.js';
import { EVENT_TYPES, MIN_RATES, TIME_PRESETS } from '../constants/offers.js';
import { makeSlug } from '../util/slug.js';

function isValidUrl(u) {
  try {
    const url = new URL(u);
    return ['http:', 'https:'].includes(url.protocol) && !!url.host;
  } catch { return false; }
}
function fmtMoney(x){ return `${x}‚≠ê`; }
function humanEvent(ev){ return EVENT_TYPES[ev] || ev; }

const eventButtons = Object.keys(EVENT_TYPES).map((k)=>[Markup.button.callback(EVENT_TYPES[k],`ev_${k}`)]);
const timeButtons = [
  [Markup.button.callback('24/7','tp_247')],
  [Markup.button.callback('–¢–æ–ª—å–∫–æ –±—É–¥–Ω–∏','tp_weekdays')],
  [Markup.button.callback('–¢–æ–ª—å–∫–æ –≤—ã—Ö–æ–¥–Ω—ã–µ','tp_weekends')],
];

export const adsWizard = new Scenes.WizardScene(
  'ads-wizard',

  async (ctx)=>{
    ctx.wizard.state.offer = {};
    await ctx.reply('üîó –í–≤–µ–¥–∏—Ç–µ URL (–∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø–∞/–±–æ—Ç/–º–∏–Ω–∏-–∞–ø–ø), —á—Ç–æ –ø—Ä–æ–¥–≤–∏–≥–∞–µ–º:', Markup.forceReply());
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const text = ctx.message?.text?.trim();
    if(!text || !isValidUrl(text)){
      await ctx.reply('‚ùó –ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL, –Ω–∞–ø—Ä.: https://t.me/your_channel');
      return;
    }
    ctx.wizard.state.offer.target_url = text;
    await ctx.reply(`‚úÖ URL –ø—Ä–∏–Ω—è—Ç: ${text}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ü–µ–ª–µ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è:`, Markup.inlineKeyboard(eventButtons));
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const cb = ctx.update?.callback_query?.data;
    if(!cb?.startsWith('ev_')){ await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å —Ç–∏–ø–æ–º –¥–µ–π—Å—Ç–≤–∏—è.'); return; }
    const ev = cb.slice(3);
    ctx.wizard.state.offer.event_type = ev;
    await ctx.answerCbQuery(); await ctx.editMessageReplyMarkup();
    const min = MIN_RATES[ev] || {regular:1, premium:1};
    await ctx.reply(
      `üìå –¶–î: *${humanEvent(ev)}*\n\n–£–∫–∞–∂–∏—Ç–µ *—Å—Ç–æ–∏–º–æ—Å—Ç—å –¶–î* (–æ–±—ã—á–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã).\n–ú–∏–Ω–∏–º—É–º: *${fmtMoney(min.regular)}*\n\n–§–æ—Ä–º–∞—Ç: \`—á–∏—Å–ª–æ\` (–Ω–∞–ø—Ä–∏–º–µ—Ä: 7)`,
      { parse_mode:'Markdown' }
    );
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const n = Number((ctx.message?.text||'').trim());
    const ev = ctx.wizard.state.offer.event_type;
    const min = MIN_RATES[ev] || {regular:1, premium:1};
    if(!Number.isInteger(n) || n < min.regular){ await ctx.reply(`‚ùó –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚â• ${min.regular}`); return; }
    ctx.wizard.state.offer.base_rate = n;
    await ctx.reply(
      `‚≠ê –£–∫–∞–∂–∏—Ç–µ *—Å—Ç–æ–∏–º–æ—Å—Ç—å –¶–î –¥–ª—è –ø—Ä–µ–º–∏—É–º-–∞–∫–∫–∞—É–Ω—Ç–æ–≤*.\n–ú–∏–Ω–∏–º—É–º: *${fmtMoney(min.premium)}*\n\n–§–æ—Ä–º–∞—Ç: \`—á–∏—Å–ª–æ\` (–Ω–∞–ø—Ä–∏–º–µ—Ä: 12)`,
      { parse_mode:'Markdown' }
    );
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const n = Number((ctx.message?.text||'').trim());
    const ev = ctx.wizard.state.offer.event_type;
    const min = MIN_RATES[ev] || {regular:1, premium:1};
    if(!Number.isInteger(n) || n < min.premium){ await ctx.reply(`‚ùó –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚â• ${min.premium}`); return; }
    ctx.wizard.state.offer.premium_rate = n;
    await ctx.reply('üéØ –£–∫–∞–∂–∏—Ç–µ *–ª–∏–º–∏—Ç –ø–æ –¶–î* (—Å–∫–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏–π –≤—Å–µ–≥–æ –Ω—É–∂–Ω–æ). –§–æ—Ä–º–∞—Ç: `—á–∏—Å–ª–æ` (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100). –ï—Å–ª–∏ 0 ‚Äî –±–µ–∑ –ª–∏–º–∏—Ç–∞.', { parse_mode:'Markdown' });
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const n = Number((ctx.message?.text||'').trim());
    if(!Number.isInteger(n) || n < 0){ await ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚â• 0'); return; }
    ctx.wizard.state.offer.caps_total = n;
    await ctx.reply('üïí –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥:', Markup.inlineKeyboard(timeButtons));
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const cb = ctx.update?.callback_query?.data;
    if(!cb?.startsWith('tp_')){ await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞.'); return; }
    await ctx.answerCbQuery(); await ctx.editMessageReplyMarkup();
    const preset = cb.slice(3);
    ctx.wizard.state.offer.caps_window = TIME_PRESETS[preset] || TIME_PRESETS['247'];

    const o = ctx.wizard.state.offer;
    const summary = [
      'üßæ *–°–≤–æ–¥–∫–∞ –æ—Ñ—Ñ–µ—Ä–∞:*',
      `‚Ä¢ URL: ${o.target_url}`,
      `‚Ä¢ –¶–î: *${humanEvent(o.event_type)}*`,
      `‚Ä¢ –°—Ç–∞–≤–∫–∞: ${fmtMoney(o.base_rate)} (–æ–±—ã—á–Ω—ã–µ)`,
      `‚Ä¢ –°—Ç–∞–≤–∫–∞ Premium: ${fmtMoney(o.premium_rate)}`,
      `‚Ä¢ –õ–∏–º–∏—Ç –ø–æ –¶–î: ${o.caps_total===0?'–±–µ–∑ –ª–∏–º–∏—Ç–∞':o.caps_total}`,
      `‚Ä¢ –¢–∞–π–º-—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥: ${preset==='247'?'24/7':preset==='weekdays'?'–ë—É–¥–Ω–∏':'–í—ã—Ö–æ–¥–Ω—ã–µ'}`,
      '\n–°–æ–∑–¥–∞—ë–º –æ—Ñ—Ñ–µ—Ä?'
    ].join('\n');

    await ctx.reply(summary, {
      parse_mode:'Markdown',
      reply_markup: { inline_keyboard: [
        [Markup.button.callback('‚úÖ –°–æ–∑–¥–∞—Ç—å –æ—Ñ—Ñ–µ—Ä','ads_commit')],
        [Markup.button.callback('‚úñÔ∏è –û—Ç–º–µ–Ω–∞','ads_cancel')],
      ] }
    });
    return ctx.wizard.next();
  },

  async (ctx)=>{
    const data = ctx.update?.callback_query?.data;
    if(!data) return;
    if(data==='ads_cancel'){ await ctx.answerCbQuery(); await ctx.editMessageReplyMarkup(); await ctx.reply('–û–∫, –æ—Ç–º–µ–Ω–∞. –ú–æ–∂–µ—à—å —Å–Ω–æ–≤–∞ –≤—ã–∑–≤–∞—Ç—å /ads.'); return ctx.scene.leave(); }
    if(data!=='ads_commit'){ await ctx.answerCbQuery(); return; }
    await ctx.answerCbQuery('–°–æ–∑–¥–∞—ë–º –æ—Ñ—Ñ–µ—Ä‚Ä¶');
    try{
      const o = ctx.wizard.state.offer;
      let host = ''; try{ host = new URL(o.target_url).host; }catch{}
      const name = `${humanEvent(o.event_type)} ‚Ä¢ ${host}`.slice(0,64);
      const slug = makeSlug(name);

      const sql = `
        INSERT INTO offers (
          id, advertiser_id, target_url, event_type,
          name, slug,
          base_rate, premium_rate,
          caps_total, caps_window,
          status
        )
        VALUES (
          gen_random_uuid(), gen_random_uuid(), $1, $2,
          $3, $4,
          $5, $6,
          $7, $8,
          'active'
        )
        RETURNING id
      `;
      const params = [
        o.target_url, o.event_type, name, slug,
        o.base_rate, o.premium_rate, o.caps_total,
        JSON.stringify(o.caps_window),
      ];
      const dbRes = await query(sql, params);
      const offerId = dbRes?.rows?.[0]?.id;
      if(!offerId) throw new Error('No offer id returned');

      const base = (process.env.BASE_URL || '').replace(/\/$/,'');
      const click = `${base}/click/${offerId}?uid=<UID>&sub1=<SUB1>`;
      await ctx.editMessageReplyMarkup();
      await ctx.reply(
        `üéâ *–û—Ñ—Ñ–µ—Ä —Å–æ–∑–¥–∞–Ω!*\nID: \`${offerId}\`\nSlug: \`${slug}\`\n\n–°—Å—ã–ª–∫–∞ –¥–ª—è –Ω–∞–ª–∏–≤–∞:\n\`${click}\`\n\n_–ü–µ—Ä–µ–¥–∞–π —Å—Å—ã–ª–∫—É –≤ –°–†–ê. –ü—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∫–ª–∏–∫–∞ uid –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¶–î ‚Äî –ø–æ—Å—Ç–±–µ–∫–Ω—É—Ç–æ._`,
        { parse_mode:'Markdown' }
      );
    }catch(e){
      console.error('create offer error', e);
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ñ—Ñ–µ—Ä. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.');
    }finally{
      return ctx.scene.leave();
    }
  }
);

adsWizard.action('ads_cancel', async (ctx)=>{
  try{ await ctx.answerCbQuery(); await ctx.editMessageReplyMarkup(); await ctx.reply('–û–∫, –æ—Ç–º–µ–Ω–∞. –ú–æ–∂–µ—à—å —Å–Ω–æ–≤–∞ –≤—ã–∑–≤–∞—Ç—å /ads.'); }
  catch(e){ console.error('ads cancel error', e); }
  finally{ return ctx.scene.leave(); }
});
